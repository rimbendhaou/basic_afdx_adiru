package Model_ADIRU_AFDX
public

  WITH AFDX;
  WITH Hardware;
  WITH Software;
  WITH AFDX_Properties;
  WITH Resolute_validate;
  WITH Resolute_afdx;
  with adiru_memory;
  with partitions;
  with ARINC653;
  with ID_Properties;
  
  
  AFDX_Net renames VIRTUAL BUS AFDX::Network;


------------------------------------------------------------------
----------------------- Main Model ADIRU AFDX---------------------
------------------------------------------------------------------
	SYSTEM afdx_adiru_model
	END afdx_adiru_model;

    
  SYSTEM IMPLEMENTATION afdx_adiru_model.i 
  	SUBCOMPONENTS
  	  main_mem  : memory adiru_memory::main_memory.impl;	
      Hardware_Layer : SYSTEM Hardware::Hardware_Layer.i;
      Software_Layer : SYSTEM Software::Software_Layer.i;
      -- ARINC-653 Configuration
      ADIRU_P1 : VIRTUAL PROCESSOR partitions::partition.impl
               { ARINC653::Partition_Identifier => 1;
                 ARINC653::Partition_Name       => "partition1"; };
      ADIRU_P2 : VIRTUAL PROCESSOR  partitions::partition.impl
               { ARINC653::Partition_Identifier => 2;
                 ARINC653::Partition_Name       => "partition2"; };
      ADIRU_P3 : VIRTUAL PROCESSOR partitions::partition.impl
               { ARINC653::Partition_Identifier => 3;
                 ARINC653::Partition_Name       => "partition3"; };
      FMS_P1 : VIRTUAL PROCESSOR partitions::partition.impl
               { ARINC653::Partition_Identifier => 4;
                 ARINC653::Partition_Name       => "partition4"; };
      
      -- AFDX Configuration
      AFDX_Network : VIRTUAL BUS AFDX_Net.i;
  	PROPERTIES
      -- Network speed defined for the whole network here
      AFDX_Properties::portSpeed => 100 MBytesps;
      -- Maps processes to processors
      Actual_Processor_Binding => (reference(ADIRU_P1)) applies to Software_Layer.ADIRU_P1;
      Actual_Processor_Binding => (reference(ADIRU_P2)) applies to Software_Layer.ADIRU_P2;
      Actual_Processor_Binding => (reference(ADIRU_P3)) applies to Software_Layer.ADIRU_P3;
      Actual_Processor_Binding => (reference(FMS_P1)) applies to Software_Layer.FMS_P;
     
      Actual_Processor_Binding => (reference(Hardware_Layer.CPM_1.CPU)) applies to ADIRU_P1;
      Actual_Processor_Binding => (reference(Hardware_Layer.CPM_1.CPU)) applies to ADIRU_P2;
      Actual_Processor_Binding => (reference(Hardware_Layer.CPM_2.CPU)) applies to ADIRU_P3;
      Actual_Processor_Binding => (reference(Hardware_Layer.CPM_3.CPU)) applies to FMS_P1;
      
      --  Bind partition process to their address spaces  (memory components)
      Actual_Memory_Binding => (reference (main_mem.P1_Mem)) applies to Software_Layer.ADIRU_P1;
      Actual_Memory_Binding => (reference (main_mem.P2_Mem)) applies to Software_Layer.ADIRU_P2;
      Actual_Memory_Binding => (reference (main_mem.P3_Mem)) applies to Software_Layer.ADIRU_P3;
      Actual_Memory_Binding => (reference (main_mem.P4_Mem)) applies to Software_Layer.FMS_P;
      
      -- Define virtual link configuration
      Actual_Connection_Binding =>(reference(Hardware_Layer.CPM_3.AFDX_EndSystem),reference(Hardware_Layer.WIRE_4),reference(Hardware_Layer.Switch_2),
                                    reference(Hardware_Layer.WIRE_2),reference(Hardware_Layer.Switch_1),reference(Hardware_Layer.WIRE_1),
                                    reference(Hardware_Layer.CPM_1.AFDX_EndSystem)) 
        applies to AFDX_Network.VL1;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_2.AFDX_EndSystem),reference(Hardware_Layer.WIRE_3),reference(Hardware_Layer.Switch_1),
                                    reference(Hardware_Layer.WIRE_2),reference(Hardware_Layer.Switch_2),
                                    reference(Hardware_Layer.WIRE_4),reference(Hardware_Layer.CPM_3.AFDX_EndSystem)) 
        applies to AFDX_Network.VL2;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_1.AFDX_EndSystem),reference(Hardware_Layer.WIRE_1),reference(Hardware_Layer.Switch_1),
                                    reference(Hardware_Layer.WIRE_2),reference(Hardware_Layer.Switch_2),
                                    reference(Hardware_Layer.WIRE_3),reference(Hardware_Layer.CPM_2.AFDX_EndSystem),
                                    reference(Hardware_Layer.WIRE_4),reference(Hardware_Layer.CPM_3.AFDX_EndSystem)) 
        applies to AFDX_Network.VL3;
      
       -- Map connections to virtual links
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_1.PCI_BUS),reference(AFDX_Network.VL3),reference(Hardware_Layer.CPM_2.PCI_BUS)) 
      applies to Software_Layer.C_1_3;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_1.PCI_BUS),reference(AFDX_Network.VL3),reference(Hardware_Layer.CPM_3.PCI_BUS)) 
      applies to Software_Layer.C_1_FMS;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_2.PCI_BUS),reference(AFDX_Network.VL2),reference(Hardware_Layer.CPM_3.PCI_BUS)) 
      applies to Software_Layer.C_3_FMS;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_3.PCI_BUS),reference(AFDX_Network.VL1),reference(Hardware_Layer.CPM_1.PCI_BUS)) 
      applies to Software_Layer.C_FMS_1;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_3.PCI_BUS),reference(AFDX_Network.VL1),reference(Hardware_Layer.CPM_1.PCI_BUS)) 
      applies to Software_Layer.C_FMS_2;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_1.PCI_BUS),reference(AFDX_Network.VL3),reference(Hardware_Layer.CPM_3.PCI_BUS)) 
      applies to Software_Layer.C_2_FMS;
      Actual_Connection_Binding => (reference(Hardware_Layer.CPM_1.PCI_BUS),reference(AFDX_Network.VL3),reference(Hardware_Layer.CPM_2.PCI_BUS)) 
      applies to Software_Layer.C_2_3;  
      
      -- Switch configuration
      AFDX_Properties::VL_Route_Table => ([
            vl => reference (AFDX_Network.VL1);
            jitter => 8 us;
            priority => high;
            accountingPolicy => frame;
                                     ],
                                     [
            vl => reference (AFDX_Network.VL2);
            jitter => 16 us;
            priority => low;
            accountingPolicy => frame;
                                     ],
                                     [
            vl => reference (AFDX_Network.VL3);
            jitter => 16 us;
            priority => high;
            accountingPolicy => frame;
                                     ]) applies to Hardware_Layer.Switch_1;
      AFDX_Properties::VL_Route_Table => ([
      	    vl => reference (AFDX_Network.VL1);
            jitter => 8 us;
            priority => high;
            accountingPolicy => frame;
                                     ],
                                     [
            vl => reference (AFDX_Network.VL2);
            jitter => 16 us;
            priority => low;
            accountingPolicy => frame;
                                     ],
                                     [
            vl => reference (AFDX_Network.VL3);
            jitter => 16 us;
            priority => high;
            accountingPolicy => frame;
                                    ]) applies to Hardware_Layer.Switch_2;
      
   annex resolute {**
	prove (check_arinc653_compliance())
	--prove (check_arinc664_compliance())
**};
  
  end afdx_adiru_model.i;   
    
    
  VIRTUAL BUS IMPLEMENTATION AFDX_Net.i
    SUBCOMPONENTS
      VL1 : VIRTUAL BUS AFDX::Virtual_Link;
      VL2 : VIRTUAL BUS AFDX::Virtual_Link;
      VL3 : VIRTUAL BUS AFDX::Virtual_Link;
  	PROPERTIES
      -- Setup virtual links configuration
      AFDX_Properties::BAG => 1 ms applies to VL1,VL2,VL3;
      AFDX_Properties::Lmax => 1518 Bytes applies to VL1;
      AFDX_Properties::Lmax => 512 Bytes applies to VL2,VL3;
      AFDX_Properties::SkewMax => 1 ms applies to VL1,VL2,VL3;
      ID_Properties::Bus_Type => Network;
      ID_Properties::Bus_Type => Virtual_link applies to VL1,VL2,VL3;
		
  END AFDX_Net.i;
  
end Model_ADIRU_AFDX;