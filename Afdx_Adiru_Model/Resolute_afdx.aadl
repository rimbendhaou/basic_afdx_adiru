package Resolute_afdx
public

annex resolute {**
    check_arinc664_compliance () <=
		** "Check compliance of the model with ARINC664 annex" **
		check_arinc664_network()
		and check_arinc664_switch()
	
	-- 
	-- Virtual bus checks
    --

	check_arinc664_network () <=
		** "Check existence of main network and presence of virtual links" **
		exists (vb : virtual_bus) . true  =>
		    has_property(vb, ID_Properties::busType) and
		    property(vb, ID_Properties::busType) = "Network" and
		    check_arinc664_virtual_links(vb)
	         
	check_arinc664_virtual_links (vb : virtual_bus) <=
		** "Check compliance of network " vb " for virtual link subcomponents" **
		 forall (vbs : virtual_bus) . parent (vbs) = vb =>
	         check_arinc664_vl_properties (vbs)
	
	check_arinc664_vl_properties (vb : virtual_bus) <=
		** "Check compliance of virtual link " vb " for BAG, SkewMax, Lmax and busType properties" **
		 
		 has_property (vb, AFDX_Properties::BAG) and 
		 has_property (vb, AFDX_Properties::SkewMax) and
		 has_property (vb, AFDX_Properties::Lmax) and
		 has_property (vb, ID_Properties::busType) and (property(vb, ID_Properties::busType) = "Virtual_link")
		 
	-- 
	-- Switch checks
    --	 
    
	check_arinc664_switch() <=
		 ** "Check compliance of switch " **
		 forall (sw : device) . true => check_arinc664_switch_check (sw)
		 
    check_arinc664_switch_check (sw:device)  <=
         ** "Check compliance of device switch " sw **
          
          (has_property (sw,ID_Properties::deviceType) and
          (property(sw, ID_Properties::deviceType) = "Switch") and
          has_property (sw, AFDX_Properties::VL_Route_Table) )
          or (property(sw, ID_Properties::deviceType) = "EndSystem")
          or (property(sw, ID_Properties::deviceType) = "Sensor")
		 	
    				
**};
end Resolute_afdx;